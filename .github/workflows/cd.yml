name: CD

on:
  release:
    branches:
    - 'main'

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    strategy:
      matrix:
        otp: [24.3.3]
        elixir: [1.13.4]

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: opal_nova_test
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
          experimental-otp: true
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Compile code
        run: mix compile --warnings-as-errors
      - name: Compile assets
        run: mix phx.digest
      - name: Check formatting
        run: mix format --check-formatted
      - name: Prepare database
        run: mix do ecto.create, ecto.migrate
      - name: Run tests
        run: mix test

  deployment:
    env: 
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: release
      - name: deploy
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy"
      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
